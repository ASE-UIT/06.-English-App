name: CI/CD for NestJS Docker Deployment

on:
  push:
    branches:
      - main-backend

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and Push Docker Images
        run: |
          cd backend
          docker compose build
          docker compose push

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH client
        run: sudo apt-get install openssh-client
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
        run: |
          ls -al
          echo "${PRIVATE_KEY}" > key.pem
          echo "${APP_SECRET}" > env
          chmod 600 key.pem env

          scp -o StrictHostKeyChecking=no -i key.pem env $EC2_USER@$EC2_HOST:/path/on/ec2/env
          scp -o StrictHostKeyChecking=no -i key.pem ./backend/docker-compose.yml $EC2_USER@$EC2_HOST:/path/on/ec2/docker-compose.yml
          echo "Begin ssh"
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
            docker compose -f /path/on/ec2/docker-compose.yml down || true
            docker rmi ${DOCKER_HUB_USERNAME}/nestjs-app:latest -f || true
            docker compose -f /path/on/ec2/docker-compose.yml pull
            docker compose --env-file /path/on/ec2/env -f /path/on/ec2/docker-compose.yml up -d
          EOF
          echo "Finish ssh"
          rm key.pem env
